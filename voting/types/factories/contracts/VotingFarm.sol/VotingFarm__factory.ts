/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VotingFarm,
  VotingFarmInterface,
} from "../../../contracts/VotingFarm.sol/VotingFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fnft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hec",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lockFarm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenLP",
        type: "address",
      },
    ],
    name: "FarmAddedByOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenLP",
        type: "address",
      },
    ],
    name: "FarmDeprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenLP",
        type: "address",
      },
    ],
    name: "FarmResurrected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "FarmVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "spiritRewards",
        type: "uint256",
      },
    ],
    name: "PreDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "HEC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_HEC_FOR_VERIFY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenLP",
        type: "address",
      },
    ],
    name: "addFarmForOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deprecateFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fNFT",
    outputs: [
      {
        internalType: "contract FNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farmVote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFarms",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getWeightByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasDistributed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDistribute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockFarm",
    outputs: [
      {
        internalType: "contract LockFarm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedTotalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "preDistribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "resurrectFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "revote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usedWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_farmVote",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voteDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526402540be400608052600a60068190556007553480156200002457600080fd5b50604051620018f7380380620018f78339810160408190526200004791620000b5565b60016000819055600280546001600160a01b039586166001600160a01b03199182161790915581549385169381169390931790556004805483163317905560038054919093169116179055620000ff565b80516001600160a01b0381168114620000b057600080fd5b919050565b600080600060608486031215620000cb57600080fd5b620000d68462000098565b9250620000e66020850162000098565b9150620000f66040850162000098565b90509250925092565b6080516117dc6200011b600039600061026601526117dc6000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c8063704b6c021161010f578063c7b2447f116100a2578063e96a6bda11610071578063e96a6bda1461042e578063eb36452714610451578063f6d12b1614610464578063f851a4401461046d57600080fd5b8063c7b2447f146103d5578063cad1b906146103e8578063d820634e14610413578063d826f88f1461042657600080fd5b806396c82e57116100de57806396c82e57146103915780639854278e1461039a5780639dc4ac8a146103ad578063a8899def146103c257600080fd5b8063704b6c021461035a5780637625391a1461036d5780637b80889b14610380578063828363911461038957600080fd5b80633b68ccdb116101875780634911dcb2116101565780634911dcb2146102d95780635ef449fd146102fc5780636accc8cf146103275780636f816a201461034757600080fd5b80633b68ccdb1461028857806343b4dd7a1461029d578063441c4379146102bd57806347d67339146102d057600080fd5b806328b02a1d116101c357806328b02a1d1461023c578063292fc9791461024557806329aa760d1461024e57806330d7b8351461026157600080fd5b80622f8de4146101e9578063159e70641461021c5780631f7b6d3214610234575b600080fd5b6102096101f73660046114ad565b60126020526000908152604090205481565b6040519081526020015b60405180910390f35b610224610480565b6040519015158152602001610213565b600e54610209565b610209600a5481565b61020960065481565b61020961025c3660046114ad565b6104d3565b6102097f000000000000000000000000000000000000000000000000000000000000000081565b61029b6102963660046114ad565b6106f2565b005b6102096102ab3660046114ad565b600c6020526000908152604090205481565b61029b6102cb3660046114ad565b610894565b61020960085481565b6102246102e73660046114ad565b600f6020526000908152604090205460ff1681565b60025461030f906001600160a01b031681565b6040516001600160a01b039091168152602001610213565b6102096103353660046114ad565b60096020526000908152604090205481565b61029b610355366004611514565b61097c565b61029b6103683660046114ad565b610adb565b61029b61037b366004611580565b610b27565b610209600b5481565b61029b610d00565b61020960055481565b60015461030f906001600160a01b031681565b6103b5610efa565b60405161021391906115a2565b61029b6103d03660046114ad565b610f5c565b61030f6103e33660046115ef565b611034565b6102096103f6366004611619565b601060209081526000928352604080842090915290825290205481565b60035461030f906001600160a01b031681565b61029b61106c565b61022461043c3660046114ad565b600d6020526000908152604090205460ff1681565b61030f61045f3660046114ad565b611077565b61020960075481565b60045461030f906001600160a01b031681565b33600090815260096020526040812054819061049c9042611662565b905060006104a9336104d3565b90506000811180156104bc575060065482115b156104ca5760019250505090565b60009250505090565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190611679565b6002546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b99190611679565b905060008060005b838110156106dd57600254604051632f745c5960e01b81526001600160a01b038981166004830152602482018490526000921690632f745c5990604401602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190611679565b60035460405163a42306e360e01b8152600481018390529192506000916001600160a01b039091169063a42306e39060240160e060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190611692565b505050505091505080856106c691906116e6565b9450505080806106d5906116fe565b9150506105c1565b506106e8848361113f565b9695505050505050565b6001600160a01b03811660009081526011602090815260408083208054825181850281018501909352808352919290919083018282801561075c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161073e575b5050505050905060008151905060008167ffffffffffffffff81111561078457610784611719565b6040519080825280602002602001820160405280156107ad578160200160208202803683370190505b506001600160a01b0385166000908152601260205260408120549192506107d3866104d3565b905060005b84811015610880576001600160a01b03871660009081526010602052604081208751829089908590811061080e5761080e61172f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490508383826108469190611745565b6108509190611764565b8583815181106108625761086261172f565b60209081029190910101525080610878816116fe565b9150506107d8565b5061088c868685611152565b505050505050565b6004546001600160a01b031633146108c75760405162461bcd60e51b81526004016108be90611786565b60405180910390fd5b6001600160a01b0381166000908152600f602052604090205460ff16156109215760405162461bcd60e51b815260206004820152600e60248201526d6661726d2069732061637469766560901b60448201526064016108be565b6001600160a01b0381166000818152600f6020908152604091829020805460ff1916600117905590519182527f0d50fcc1b150592f1d9d4c5da42b22ddcc6ad97364c9338f1b7ab4231a18040191015b60405180910390a150565b336000818152600960205260408120546109969042611662565b905060065481116109e95760405162461bcd60e51b815260206004820152601c60248201527f596f7520766f74656420696e20746865206c617374203720646179730000000060448201526064016108be565b60006109f4336104d3565b905060008111610a465760405162461bcd60e51b815260206004820152601960248201527f596f7572204845432062616c616e616365206973207a65726f0000000000000060448201526064016108be565b858414610a5257600080fd5b3360008181526009602090815260409182902042905581518982028181018301909352898152610ad2939290918b918b9182919085019084908082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061115292505050565b50505050505050565b6004546001600160a01b03163314610b055760405162461bcd60e51b81526004016108be90611786565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60026000541415610b7a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108be565b6002600055808210610bbb5760405162461bcd60e51b815260206004820152600a6024820152691898590817dcdd185c9d60b21b60448201526064016108be565b600e54811115610bf85760405162461bcd60e51b81526020600482015260086024820152671898590817d95b9960c21b60448201526064016108be565b6000600b54118015610c0c57506000600a54115b15610cf757815b81811015610cf5576000600e8281548110610c3057610c3061172f565b60009182526020808320909101546001600160a01b0316808352600d90915260409091205490915060ff16158015610c8057506001600160a01b0381166000908152600f602052604090205460ff165b15610ce257600a546001600160a01b0382166000908152600c6020526040812054600b54919291610cb19190611745565b610cbb9190611764565b9050506001600160a01b0381166000908152600d60205260409020805460ff191660011790555b5080610ced816116fe565b915050610c13565b505b50506001600055565b60026000541415610d535760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108be565b60026000908155600854610d679042611662565b90506007548111610dcf5760405162461bcd60e51b815260206004820152602c60248201527f7468697320686173206265656e20646973747269627574656420696e2074686560448201526b206c6173742037206461797360a01b60648201526084016108be565b600554600a5560005b600e54811015610e41576000600d6000600e8481548110610dfb57610dfb61172f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580610e39816116fe565b915050610dd8565b50426008556001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb39190611679565b600b81905560405160008082529192507fce10d9c5a37f75faa552238874842dbf93dc8424647cb8c3286cfdcb73f6212a9060200160405180910390a15050600160005550565b6060600e805480602002602001604051908101604052809291908181526020018280548015610f5257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f34575b5050505050905090565b6004546001600160a01b03163314610f865760405162461bcd60e51b81526004016108be90611786565b6001600160a01b0381166000908152600f602052604090205460ff16610fe35760405162461bcd60e51b81526020600482015260126024820152716661726d206973206e6f742061637469766560701b60448201526064016108be565b6001600160a01b0381166000818152600f6020908152604091829020805460ff1916905590519182527fe7a9a2b41702a7b1de9b7b4cc32ba216c51af79594085abff022c51eb34e6a059101610971565b6011602052816000526040600020818154811061105057600080fd5b6000918252602090912001546001600160a01b03169150829050565b61107533611325565b565b6004546000906001600160a01b031633146110a45760405162461bcd60e51b81526004016108be90611786565b600e805460018082019092557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0385169081179091556000818152600f6020908152604091829020805460ff1916909417909355519081527f8bb31fa85234d6e805253d8a8b4c538007e450c41a164d78588b084192bc7587910160405180910390a15090565b600061114b82846116e6565b9392505050565b61115b83611325565b81516000611168856104d3565b905060008060005b848110156111b8576111a486828151811061118d5761118d61172f565b60200260200101518461113f90919063ffffffff16565b9250806111b0816116fe565b915050611170565b5060005b848110156112cc5760008782815181106111d8576111d861172f565b60200260200101519050600061121a85611214888b87815181106111fe576111fe61172f565b602002602001015161143f90919063ffffffff16565b9061144b565b9050611226848261113f565b600554909450611236908261113f565b6005556001600160a01b0382166000908152600c602052604090205461125c908261113f565b6001600160a01b039283166000818152600c6020908152604080832094909455948d168082526011865283822080546001810182559083528683200180546001600160a01b03191684179055815260108552828120918152935290912055806112c4816116fe565b9150506111bc565b506001600160a01b03871660008181526012602090815260409182902084905590519182527f75e626f43b00b636e7d99e89b3ce053c5a3b9e6991ab058b859eff5b3a277aef910160405180910390a150505050505050565b6001600160a01b0381166000908152601160205260408120805490915b8181101561141857600083828154811061135e5761135e61172f565b60009182526020808320909101546001600160a01b03888116845260108352604080852091909216808552925290912054909150801561140357806005546113a69190611662565b6005556001600160a01b0382166000908152600c60205260409020546113cd908290611662565b6001600160a01b038084166000818152600c6020908152604080832095909555928a168152601083528381209181529152908120555b50508080611410906116fe565b915050611342565b506001600160a01b038316600090815260116020526040812061143a91611457565b505050565b600061114b8284611745565b600061114b8284611764565b50805460008255906000526020600020908101906114759190611478565b50565b5b8082111561148d5760008155600101611479565b5090565b80356001600160a01b03811681146114a857600080fd5b919050565b6000602082840312156114bf57600080fd5b61114b82611491565b60008083601f8401126114da57600080fd5b50813567ffffffffffffffff8111156114f257600080fd5b6020830191508360208260051b850101111561150d57600080fd5b9250929050565b6000806000806040858703121561152a57600080fd5b843567ffffffffffffffff8082111561154257600080fd5b61154e888389016114c8565b9096509450602087013591508082111561156757600080fd5b50611574878288016114c8565b95989497509550505050565b6000806040838503121561159357600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156115e35783516001600160a01b0316835292840192918401916001016115be565b50909695505050505050565b6000806040838503121561160257600080fd5b61160b83611491565b946020939093013593505050565b6000806040838503121561162c57600080fd5b61163583611491565b915061164360208401611491565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116745761167461164c565b500390565b60006020828403121561168b57600080fd5b5051919050565b600080600080600080600060e0888a0312156116ad57600080fd5b5050855160208701516040880151606089015160808a015160a08b015160c0909b0151949c939b50919990985090965094509092509050565b600082198211156116f9576116f961164c565b500190565b60006000198214156117125761171261164c565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561175f5761175f61164c565b500290565b60008261178157634e487b7160e01b600052601260045260246000fd5b500490565b60208082526006908201526510b0b236b4b760d11b60408201526060019056fea26469706673582212207322893ac8d56d4210d7af1c1a16cc811fc6e43d77cc260ae7ce12415f19c20364736f6c634300080b0033";

type VotingFarmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingFarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingFarm__factory extends ContractFactory {
  constructor(...args: VotingFarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fnft: PromiseOrValue<string>,
    _hec: PromiseOrValue<string>,
    _lockFarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VotingFarm> {
    return super.deploy(
      _fnft,
      _hec,
      _lockFarm,
      overrides || {}
    ) as Promise<VotingFarm>;
  }
  override getDeployTransaction(
    _fnft: PromiseOrValue<string>,
    _hec: PromiseOrValue<string>,
    _lockFarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fnft, _hec, _lockFarm, overrides || {});
  }
  override attach(address: string): VotingFarm {
    return super.attach(address) as VotingFarm;
  }
  override connect(signer: Signer): VotingFarm__factory {
    return super.connect(signer) as VotingFarm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingFarmInterface {
    return new utils.Interface(_abi) as VotingFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingFarm {
    return new Contract(address, _abi, signerOrProvider) as VotingFarm;
  }
}
