/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VotingFarm,
  VotingFarmInterface,
} from "../../../contracts/VotingFarm.sol/VotingFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fnft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hec",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lockFarm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "farm",
        type: "address",
      },
    ],
    name: "FarmAddedByOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "farm",
        type: "address",
      },
    ],
    name: "FarmDeprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "farm",
        type: "address",
      },
    ],
    name: "FarmResurrected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "FarmVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "SetAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "SetConfiguration",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "SetMaxPercentageFarm",
    type: "event",
  },
  {
    inputs: [],
    name: "HEC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farm",
        type: "address",
      },
    ],
    name: "addFarmForOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farm",
        type: "address",
      },
    ],
    name: "deprecateFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fNFT",
    outputs: [
      {
        internalType: "contract FNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farmVote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFarms",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFarmsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFarmsWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getWeightByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockFarm",
    outputs: [
      {
        internalType: "contract LockFarm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farm",
        type: "address",
      },
    ],
    name: "resurrectFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "revote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fnft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hec",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lockFarm",
        type: "address",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
    ],
    name: "setMaxPercentageFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setTestMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usedWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_farmVote",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voteDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052605060065562093a806007553480156200001d57600080fd5b5060405162001d1938038062001d198339810160408190526200004091620000ae565b60016000819055600280546001600160a01b039586166001600160a01b03199182161790915581549385169381169390931790556004805483163317905560038054919093169116179055620000f8565b80516001600160a01b0381168114620000a957600080fd5b919050565b600080600060608486031215620000c457600080fd5b620000cf8462000091565b9250620000df6020850162000091565b9150620000ef6040850162000091565b90509250925092565b611c1180620001086000396000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80636f816a2011610104578063c7b2447f116100a2578063d826f88f11610071578063d826f88f146103f4578063eb364527146103fc578063f010b9531461040f578063f851a4401461042257600080fd5b8063c7b2447f14610390578063cad1b906146103a3578063d18fca9f146103ce578063d820634e146103e157600080fd5b806396c82e57116100de57806396c82e571461034c5780639854278e146103555780639dc4ac8a14610368578063a8899def1461037d57600080fd5b80636f816a201461031e578063704b6c02146103315780637af5096e1461034457600080fd5b806343b4dd7a116101715780634911dcb21161014b5780634911dcb2146102a857806357bd8ecb146102cb5780635ef449fd146102d35780636accc8cf146102fe57600080fd5b806343b4dd7a14610260578063441c43791461028057806346adb4dd1461029357600080fd5b8063292fc979116101ad578063292fc9791461022657806329aa760d1461022f57806335b6003b146102425780633b68ccdb1461024b57600080fd5b80622f8de4146101d3578063159e7064146102065780631f7b6d321461021e575b600080fd5b6101f36101e1366004611841565b600e6020526000908152604090205481565b6040519081526020015b60405180910390f35b61020e610435565b60405190151581526020016101fd565b600a546101f3565b6101f360075481565b6101f361023d366004611841565b610488565b6101f360065481565b61025e610259366004611841565b6106e3565b005b6101f361026e366004611841565b60096020526000908152604090205481565b61025e61028e366004611841565b610885565b61029b61096d565b6040516101fd919061185e565b61020e6102b6366004611841565b600b6020526000908152604090205460ff1681565b61025e610a44565b6002546102e6906001600160a01b031681565b6040516001600160a01b0390911681526020016101fd565b6101f361030c366004611841565b60086020526000908152604090205481565b61025e61032c3660046118ee565b610a75565b61025e61033f366004611841565b610bd4565b6101f3610c53565b6101f360055481565b6001546102e6906001600160a01b031681565b610370610c65565b6040516101fd919061195a565b61025e61038b366004611841565b610d7f565b6102e661039e36600461199b565b610e57565b6101f36103b13660046119c7565b600c60209081526000928352604080842090915290825290205481565b61025e6103dc366004611a00565b610e8f565b6003546102e6906001600160a01b031681565b61025e610ef3565b6102e661040a366004611841565b610efe565b61025e61041d366004611a19565b61105c565b6004546102e6906001600160a01b031681565b3360009081526008602052604081205481906104519042611a7a565b9050600061045e33610488565b9050600081118015610471575060075482115b1561047f5760019250505090565b60009250505090565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a082319060240160206040518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190611a91565b6002546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a082319060240160206040518083038186803b15801561055457600080fd5b505afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611a91565b905060008060005b838110156106ce57600254604051632f745c5960e01b81526001600160a01b038981166004830152602482018490526000921690632f745c599060440160206040518083038186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190611a91565b60035460405163a42306e360e01b8152600481018390529192506000916001600160a01b039091169063a42306e39060240160e06040518083038186803b15801561066b57600080fd5b505afa15801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a39190611aaa565b505050505091505080856106b79190611afe565b9450505080806106c690611b16565b915050610594565b506106d984836110fb565b9695505050505050565b6001600160a01b0381166000908152600d602090815260408083208054825181850281018501909352808352919290919083018282801561074d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161072f575b5050505050905060008151905060008167ffffffffffffffff81111561077557610775611b31565b60405190808252806020026020018201604052801561079e578160200160208202803683370190505b506001600160a01b0385166000908152600e60205260408120549192506107c486610488565b905060005b84811015610871576001600160a01b0387166000908152600c60205260408120875182908990859081106107ff576107ff611b47565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490508383826108379190611b5d565b6108419190611b7c565b85838151811061085357610853611b47565b6020908102919091010152508061086981611b16565b9150506107c9565b5061087d86868561110e565b505050505050565b6004546001600160a01b031633146108b85760405162461bcd60e51b81526004016108af90611b9e565b60405180910390fd5b6001600160a01b0381166000908152600b602052604090205460ff16156109125760405162461bcd60e51b815260206004820152600e60248201526d6661726d2069732061637469766560901b60448201526064016108af565b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527f0d50fcc1b150592f1d9d4c5da42b22ddcc6ad97364c9338f1b7ab4231a18040191015b60405180910390a150565b60606000610979610c65565b90506000815167ffffffffffffffff81111561099757610997611b31565b6040519080825280602002602001820160405280156109c0578160200160208202803683370190505b50905060005b8251811015610a3d57600960008483815181106109e5576109e5611b47565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610a2057610a20611b47565b602090810291909101015280610a3581611b16565b9150506109c6565b5092915050565b6004546001600160a01b03163314610a6e5760405162461bcd60e51b81526004016108af90611b9e565b600a600755565b33600081815260086020526040812054610a8f9042611a7a565b90506007548111610ae25760405162461bcd60e51b815260206004820152601c60248201527f596f7520766f74656420696e20746865206c617374203720646179730000000060448201526064016108af565b6000610aed33610488565b905060008111610b3f5760405162461bcd60e51b815260206004820152601960248201527f596f7572204845432062616c616e616365206973207a65726f0000000000000060448201526064016108af565b858414610b4b57600080fd5b3360008181526008602090815260409182902042905581518982028181018301909352898152610bcb939290918b918b9182919085019084908082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061110e92505050565b50505050505050565b6004546001600160a01b03163314610bfe5760405162461bcd60e51b81526004016108af90611b9e565b600480546001600160a01b0319166001600160a01b0383169081179091556040805182815260208101929092527f848ac24ab84501710d6631faab117b66b79aba7ec6f7778cf3bcff428c1a4efc9101610962565b600080610c5e610c65565b5192915050565b600a5460609060009067ffffffffffffffff811115610c8657610c86611b31565b604051908082528060200260200182016040528015610caf578160200160208202803683370190505b50905060005b600a54811015610d7957600b6000600a8381548110610cd657610cd6611b47565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610d6757600a8181548110610d1657610d16611b47565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610d4657610d46611b47565b60200260200101906001600160a01b031690816001600160a01b0316815250505b80610d7181611b16565b915050610cb5565b50919050565b6004546001600160a01b03163314610da95760405162461bcd60e51b81526004016108af90611b9e565b6001600160a01b0381166000908152600b602052604090205460ff16610e065760405162461bcd60e51b81526020600482015260126024820152716661726d206973206e6f742061637469766560701b60448201526064016108af565b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527fe7a9a2b41702a7b1de9b7b4cc32ba216c51af79594085abff022c51eb34e6a059101610962565b600d6020528160005260406000208181548110610e7357600080fd5b6000918252602090912001546001600160a01b03169150829050565b6004546001600160a01b03163314610eb95760405162461bcd60e51b81526004016108af90611b9e565b6006819055604080518281523360208201527f696651e83f45c5f20efacd9d22c0b09d6c09b6bf853be21a786e650022f103889101610962565b610efc336113c4565b565b6004546000906001600160a01b03163314610f2b5760405162461bcd60e51b81526004016108af90611b9e565b610f34826114de565b610f755760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590819985c9b48185919195960721b60448201526064016108af565b610f7e82611611565b610fc15760405162461bcd60e51b8152602060048201526014602482015273416c72656164792065786973746564206661726d60601b60448201526064016108af565b600a805460018082019092557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0385169081179091556000818152600b6020908152604091829020805460ff1916909417909355519081527f8bb31fa85234d6e805253d8a8b4c538007e450c41a164d78588b084192bc7587910160405180910390a15090565b6004546001600160a01b031633146110865760405162461bcd60e51b81526004016108af90611b9e565b600280546001600160a01b038581166001600160a01b0319928316179092556001805485841690831617905560038054928416929091169190911790556040513381527f63917b966ba08f88836a237f27084663bd4723bbb43b2baa5077c2f5566234639060200160405180910390a1505050565b60006111078284611afe565b9392505050565b611116610c53565b8251148015611129575061112982611683565b6111655760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964204661726d7360981b60448201526064016108af565b61116e8161178d565b6111ac5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b60448201526064016108af565b815160006111b985610488565b905060008060005b84811015611209576111f58682815181106111de576111de611b47565b6020026020010151846110fb90919063ffffffff16565b92508061120181611b16565b9150506111c1565b508160641461124f5760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b60448201526064016108af565b611258876113c4565b60005b8481101561136b57600087828151811061127757611277611b47565b6020026020010151905060006112b9856112b3888b878151811061129d5761129d611b47565b60200260200101516117da90919063ffffffff16565b906117e6565b90506112c584826110fb565b6005549094506112d590826110fb565b6005556001600160a01b0382166000908152600960205260409020546112fb90826110fb565b6001600160a01b03928316600081815260096020908152604080832094909455948d16808252600d865283822080546001810182559083528683200180546001600160a01b031916841790558152600c85528281209181529352909120558061136381611b16565b91505061125b565b506001600160a01b0387166000818152600e602090815260409182902084905590519182527f75e626f43b00b636e7d99e89b3ce053c5a3b9e6991ab058b859eff5b3a277aef910160405180910390a150505050505050565b6001600160a01b0381166000908152600d60205260408120805490915b818110156114b75760008382815481106113fd576113fd611b47565b60009182526020808320909101546001600160a01b038881168452600c835260408085209190921680855292529091205490915080156114a257806005546114459190611a7a565b6005556001600160a01b03821660009081526009602052604090205461146c908290611a7a565b6001600160a01b03808416600081815260096020908152604080832095909555928a168152600c83528381209181529152908120555b505080806114af90611b16565b9150506113e1565b506001600160a01b0383166000908152600d602052604081206114d9916117f2565b505050565b60008082905060006001600160a01b0316816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561152857600080fd5b505afa15801561153c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115609190611bbe565b6001600160a01b0316141580156115fa575060006001600160a01b0316816001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156115b657600080fd5b505afa1580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ee9190611bbe565b6001600160a01b031614155b156116085750600192915050565b50600092915050565b600060018161161e610c65565b905060005b815181101561167a5781818151811061163e5761163e611b47565b60200260200101516001600160a01b0316856001600160a01b03161415611668576000925061167a565b8061167281611b16565b915050611623565b50909392505050565b6000806001905060008360008151811061169f5761169f611b47565b602002602001015190506000600190505b8451811015611724578481815181106116cb576116cb611b47565b60200260200101516001600160a01b0316826001600160a01b031614156116f55760009250611724565b84818151811061170757611707611b47565b60200260200101519150808061171c90611b16565b9150506116b0565b5060005b845181101561167a57600b600086838151811061174757611747611b47565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661177b576000925061167a565b8061178581611b16565b915050611728565b60006001815b8351811015610a3d576006548482815181106117b1576117b1611b47565b602002602001015111156117c85760009150610a3d565b806117d281611b16565b915050611793565b60006111078284611b5d565b60006111078284611b7c565b50805460008255906000526020600020908101906118109190611813565b50565b5b808211156118285760008155600101611814565b5090565b6001600160a01b038116811461181057600080fd5b60006020828403121561185357600080fd5b81356111078161182c565b6020808252825182820181905260009190848201906040850190845b818110156118965783518352928401929184019160010161187a565b50909695505050505050565b60008083601f8401126118b457600080fd5b50813567ffffffffffffffff8111156118cc57600080fd5b6020830191508360208260051b85010111156118e757600080fd5b9250929050565b6000806000806040858703121561190457600080fd5b843567ffffffffffffffff8082111561191c57600080fd5b611928888389016118a2565b9096509450602087013591508082111561194157600080fd5b5061194e878288016118a2565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156118965783516001600160a01b031683529284019291840191600101611976565b600080604083850312156119ae57600080fd5b82356119b98161182c565b946020939093013593505050565b600080604083850312156119da57600080fd5b82356119e58161182c565b915060208301356119f58161182c565b809150509250929050565b600060208284031215611a1257600080fd5b5035919050565b600080600060608486031215611a2e57600080fd5b8335611a398161182c565b92506020840135611a498161182c565b91506040840135611a598161182c565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015611a8c57611a8c611a64565b500390565b600060208284031215611aa357600080fd5b5051919050565b600080600080600080600060e0888a031215611ac557600080fd5b5050855160208701516040880151606089015160808a015160a08b015160c0909b0151949c939b50919990985090965094509092509050565b60008219821115611b1157611b11611a64565b500190565b6000600019821415611b2a57611b2a611a64565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611b7757611b77611a64565b500290565b600082611b9957634e487b7160e01b600052601260045260246000fd5b500490565b60208082526006908201526510b0b236b4b760d11b604082015260600190565b600060208284031215611bd057600080fd5b81516111078161182c56fea2646970667358221220d82acab324a06e59dc2ddb89f330c8b2871466fcd6a114456d306aa34225739364736f6c63430008090033";

type VotingFarmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingFarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingFarm__factory extends ContractFactory {
  constructor(...args: VotingFarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fnft: PromiseOrValue<string>,
    _hec: PromiseOrValue<string>,
    _lockFarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VotingFarm> {
    return super.deploy(
      _fnft,
      _hec,
      _lockFarm,
      overrides || {}
    ) as Promise<VotingFarm>;
  }
  override getDeployTransaction(
    _fnft: PromiseOrValue<string>,
    _hec: PromiseOrValue<string>,
    _lockFarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fnft, _hec, _lockFarm, overrides || {});
  }
  override attach(address: string): VotingFarm {
    return super.attach(address) as VotingFarm;
  }
  override connect(signer: Signer): VotingFarm__factory {
    return super.connect(signer) as VotingFarm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingFarmInterface {
    return new utils.Interface(_abi) as VotingFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingFarm {
    return new Contract(address, _abi, signerOrProvider) as VotingFarm;
  }
}
